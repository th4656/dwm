--- config.h	2013-04-06 21:01:27.750829760 +0200
+++ config.h	2013-04-06 21:02:19.557495556 +0200
@@ -19,4 +19,5 @@ 
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const unsigned int minwsz    = 20;       /* Minimal heigt of a client for smfact */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 
--- config.h	2013-04-06 21:01:27.750829760 +0200
+++ config.h	2013-04-06 21:02:19.557495556 +0200
@@ -37,4 +37,5 @@ 
 /* layout(s) */
 static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float smfact    = 0.00; /* factor of tiled clients [0.00..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
 static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
 
--- config.h	2013-04-06 21:01:27.750829760 +0200
+++ config.h	2013-04-06 21:02:19.557495556 +0200
@@ -60,6 +62,8 @@ static Key keys[] = {
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY|ShiftMask,             XK_h,      setsmfact,      {.f = +0.05} },
+	{ MODKEY|ShiftMask,             XK_l,      setsmfact,      {.f = -0.05} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
 	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
--- dwm.c	2011-12-19 16:02:46.000000000 +0100
+++ dwm.c	2013-04-06 21:00:46.620830452 +0200
@@ -69,6 +69,7 @@ typedef union {
 	int i;
 	unsigned int ui;
 	float f;
+	float sf;
 	const void *v;
 } Arg;
 
@@ -127,6 +128,7 @@ typedef struct {
 struct Monitor {
 	char ltsymbol[16];
 	float mfact;
+	float smfact;
 	int nmaster;
 	int num;
 	int by;               /* bar geometry */
@@ -201,6 +201,7 @@ 
 static void setfocus(Client *c);
 static void setfullscreen(Client *c, int fullscreen);
 static void setlayout(const Arg *arg);
 static void setmfact(const Arg *arg);
+static void setsmfact(const Arg *arg);
 static void setup(void);
 static void showhide(Client *c);
 static void sigchld(int unused);
--- dwm.c	2011-12-19 16:02:46.000000000 +0100
+++ dwm.c	2013-04-06 21:00:46.620830452 +0200
@@ -651,10 +654,11 @@ 
 createmon(void)
 {
 	Monitor *m;

 	m = ecalloc(1, sizeof(Monitor));
 	m->tagset[0] = m->tagset[1] = 1;
 	m->mfact = mfact;
+	m->smfact = smfact;
 	m->nmaster = nmaster;
 	m->showbar = showbar;
 	m->topbar = topbar;
@@ -1601,7 +1601,20 @@
 	arrange(selmon);
 }
 
+void
+setsmfact(const Arg *arg) {
+	float sf;
+
+	if (!arg || !selmon->lt[selmon->sellt]->arrange)
+		return;
+	sf = arg->sf < 1.0 ? arg->sf + selmon->smfact : arg->sf - 1.0;
+	if (sf < 0 || sf > 0.9)
+		return;
+	selmon->smfact = sf;
+	arrange(selmon);
+}
+
 void
 setup(void) 
 {
 	XSetWindowAttributes wa;
 
--- dwm.c	2011-12-19 16:02:46.000000000 +0100
+++ dwm.c	2013-04-06 21:00:46.620830452 +0200
@@ -1724,7 +1724,7 @@
 void
 tile(Monitor *m) 
 {
-	unsigned int i, n, h, mw, my, ty;
+	unsigned int i, n, h, smh, mw, my, ty;
 	Client *c;
 
 	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);

--- dwm.c	2011-12-19 16:02:46.000000000 +0100
+++ dwm.c	2013-04-06 21:00:46.620830452 +0200
@@ -1745,7 +1745,21 @@
 			my += HEIGHT(c) - c->bw;
 		} else {
-			h = (m->wh - ty) / (n - i);
-			resize(c, m->wx + mw - c->bw, m->wy + ty, m->ww - mw, h - c->bw, 0);
-			ty += HEIGHT(c) - c->bw;
+			smh = m->mh * m->smfact;
+			if (!(nexttiled(c->next)))
+				h = (m->wh - ty) / (n - i);
+			else
+				h = (m->wh - smh - ty) / (n - i);
+			if (h < minwsz) {
+				c->isfloating = 1;
+				XRaiseWindow(dpy, c->win);
+				resize(c, m->mx + (m->mw / 2 - WIDTH(c) / 2), m->my + (m->mh / 2 - HEIGHT(c) / 2), m->ww - mw - (2*c->bw), h - (2*c->bw), 0);
+				ty -= HEIGHT(c) - c->bw;
+			}
+			else
+				resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), 0);
+			if (!(nexttiled(c->next)))
+				ty += HEIGHT(c) + smh - c->bw;
+			else
+				ty += HEIGHT(c) - c->bw;
 		}
 }
 
